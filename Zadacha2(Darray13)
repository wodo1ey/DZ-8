//в матрице A размерности n x n найти максимальный элемент max1, находящийся на периметре матрицы, и максимальный элемент max2
//вне периметра матрицы. Периметром яввяются граничные элементы.

#include "pt4.h"
using namespace std;

void Solve()
{
    Task("DArray13");
	int n;
	pt >> n;
	int* mas = new int[n * n];
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			pt >> *(mas + i * n + j);
		}
	}
	int max1 = *(mas + 0 + 0);
	for (int i = 1; i < n; i++) {
		if (max1 < *(mas + 0 + i)) max1 = *(mas + 0 + i);
	}
	for (int i = 1; i < n; i++) {
		if (max1 < *(mas + i * n + 0)) max1 = *(mas + i * n + 0);
	}
	for (int i = 0; i < n; i++) {
		if (max1 < *(mas + (n - 1) * n + i)) max1 = *(mas + (n - 1) * n + i);
	}
	for (int i = 0; i < n; i++) {
		if (max1 < *(mas + i * n + (n - 1))) max1 = *(mas + i * n + (n - 1));
	}
	int max2 = *(mas + 1 * n + 1);
	for (int i = 1; i < (n - 1); i++) {
		for (int j = 1; j < (n - 1); j++) {
			if (max2 < *(mas + i * n + j)) max2 = *(mas + i * n + j);
		}
	}
	pt << max1;
	pt << max2;
}
